{"meta":{"title":"鸿基-梦","subtitle":null,"description":"前端博客,鸿基梦,hjm100,","author":"hjm100","url":"//hjm100.cn/Blogs"},"pages":[],"posts":[{"title":"开发操作小妙招","slug":"开发操作小妙招","date":"2017-10-11T02:02:04.000Z","updated":"2017-10-11T02:17:19.251Z","comments":true,"path":"2017/10/11/开发操作小妙招/","link":"","permalink":"//hjm100.cn/Blogs/2017/10/11/开发操作小妙招/","excerpt":"","text":"1.删除node_modules包npm install rimraf -grimraf node_modules也可以使用： 直接删除 rm -f node_modules 需要确认是否删除： rm -i node_modules 2..https与http的区别： https是http的安全版，即http下加入SSL层，https的安全基础是SSL层， 3.anywhere 随启随用的静态文件服务器使用前需要先安装：npm install anywhere -g然后在目标文件夹执行git命令行：anywhere认不添加 -s 命令会在命令敲击后，同时打开浏览器访问 http://localhost:8000/ 这个路径。anywhere -p 8000 ## 指定静态服务器的端口号anywhere -s ## 静默执行，不打开浏览器 4.开发过程中的谷歌卡发工具样式妙招针对色值选择，可以在style中输入后点击颜色图标可以出现色值选择表可以微调的，可以使用吸管吸取网页中的其它区域颜色，与ColorCop用法一样（好用） 5.开发过程中需要看很多外国文档，比如angular需要你的浏览器越狱，推荐一个越狱软件蓝灯：下载地址链接：http://pan.baidu.com/s/1boYpxCz 密码：rn6q 6.清楚浏览器缓存的快捷方法1.ctrl+shift+N.即可无痕浏览网页了！2.ctrl+H快速打开历史记录3.清除Google浏览器缓存的快捷键 Ctrl+Shift+Del rm命令详解（附加文档）rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。注意：使用rm命令要格外小心。因为一旦删除了一个文件，就无法再恢复它。所以，在删除文件之前，最好再看一下文件的内容，确定是否真要删除。rm命令可以用-i选项，这个选项在使用文件扩展名字符删除多个文件时特别有用。使用这个选项，系统会要求你逐一确定是否要删除。这时，必须输入y并按Enter键，才能删除文件。如果仅按Enter键或其他字符，文件不会被删除。语法 rm (选项)(参数)选项-d：直接把欲删除的目录的硬连接数据删除成0，删除该目录；-f：强制删除文件或目录；-i：删除已有文件或目录之前先询问用户；-r或-R：递归处理，将指定目录下的所有文件与子目录一并处理；–preserve-root：不对根目录进行递归操作；-v：显示指令的详细执行过程。参数文件：指定被删除的文件列表，如果参数中含有目录，则必须加上-r或者-R选项。实例交互式删除当前目录下的文件test和examplerm -i test exampleRemove test ?n（不删除文件test)Remove example ?y（删除文件example)删除当前目录下除隐含文件外的所有文件和子目录 rm -r *应注意，这样做是非常危险的! 以上博文出处：http://man.linuxde.net/rm（感谢博主分享）","categories":[{"name":"开发","slug":"开发","permalink":"//hjm100.cn/Blogs/categories/开发/"}],"tags":[{"name":"开发技术","slug":"开发技术","permalink":"//hjm100.cn/Blogs/tags/开发技术/"}]},{"title":"工作日常习惯","slug":"工作日常习惯","date":"2017-10-09T14:06:22.000Z","updated":"2017-10-10T04:14:54.833Z","comments":true,"path":"2017/10/09/工作日常习惯/","link":"","permalink":"//hjm100.cn/Blogs/2017/10/09/工作日常习惯/","excerpt":"","text":"1.上班第一步：打卡、更新代码、登QQ 2.收到设计给的图片后都需要压缩–&gt;压缩网址：https://tinypng.com/ 3.熟知开发流程：分析、设计、计划、实现 分析 =&gt; 业务流程 设计 =&gt; 界面、接口、业务逻辑、数据库 计划 =&gt; 进度安排、分工合作 实现 =&gt; 编码实现、代码结构 4.有问题在技术群里讨论（时刻关注技术群动态“关注自己的工作任务”） 5.提交代码的时候一定要加以说明 6.每次开会之前先总结一下上周工作完成情况（必要） 7.难懂的技术问题（技术困难）先自己解决，实在不能解决请教他人（不要死磕钉子，不懂得及时问，不要拉进度） 8.工作之余就学习，技术问题做总结。（日常有用技术要记录不能天天“查百度”） 个人总结方法：（及时日记文档记录，有空更新码云开源准备） 公众号：标签导航，自动回复 次 码 云：电脑 –&gt; 代码仓库（总结技术） 主 本人码云：https://git.oschina.net/hjm100 百度云盘：书籍存储–&gt;生成链接以供下载 次 9.每周，每日要有工作计划，个人工作计划模板（工作的时候不能太迷） @2017-07-17 ~ @2017-07-21 ------------------------------------------------------------- 1.代理商任务上线准备（完成） 2.优化代理商后台（完成） 3.推广系统前端搭建（未完成） 4.学习新知识（进行中） @2017-07-17 ------------------------------------------------------------- 1.代理商任务bug修改（完成） 2.优化代理商后台验证码倒计时相关页面（完成） 3.编写推广页面 10.时刻总结反思工作不足（知错就改，同一个问题不犯第二次） 本人建议：需要建五个记事本 1.每周计划（包含日常计划） 2.工作记录（记录例会上有关自己的工作，以及项目中的调试方法，等与公司相关内容） 3.生活习惯（工作中的查漏补缺） 4.工作技术分享（记录技术上的不足与总结） 5.更新说明（完成一项工作的时候，项目上线之前，总结一下自己这块需要更新的代码图片等） 如果工作之余需要参与测试的同鞋还可以准备一个测试文档（测试文档可以根据自己的爱好 要描述清楚：测试账号，测试效果，预计效果，效果对比，产生bug，bug来源） 11.项目环境搭建要熟悉，项目存放地点要合理 本人与工作操作项目都在D:\\work中 本人美术图片，产品原型都在：D:\\svn中 本人D盘有代码垃圾存放地，日常记录存放地，前端书籍存放地，等文件夹， 这些文件夹都创建了一个桌面快捷方式，以至于你的桌面不会太乱和快速打开文件所在地 12.桌面不要太乱（本人生活喜欢，桌面太乱容易造成压抑） 13.代码优化：(代码优化是一个项目完美的必经之路)安全性-&gt;运行时稳定性-&gt;清晰度和编码风格-&gt;编码效率-&gt;测试有效性-&gt;性能剖析 14.自我评价： 1.努力学习，不断提高业务能力。在工作中，认真学习业务知识，不断积累经验，不断充实自己。 2.工作中吃苦耐劳，认真完成了本岗位各项工作任务;团结同事，共同努力。由于自己工作经验不足， 平常善于总结，减少工作中的错误，一直以不让错误产生第二步为自己的准则，努力完善自己。 3.在试用期的N个月中，我学到了很多知识，不止是专业技能的提高，更重要的是学会了一套自己的工作方式， 从每天计划到日常工作总结都在以后的工作中受益匪浅。","categories":[],"tags":[{"name":"工作习惯","slug":"工作习惯","permalink":"//hjm100.cn/Blogs/tags/工作习惯/"}]},{"title":"hexo搭建博客","slug":"hexo搭建博客","date":"2017-09-29T02:14:22.000Z","updated":"2017-10-09T02:08:56.610Z","comments":true,"path":"2017/09/29/hexo搭建博客/","link":"","permalink":"//hjm100.cn/Blogs/2017/09/29/hexo搭建博客/","excerpt":"","text":"手把手教你 hexo + github搭建自己的博客以及个人主页 网上有很多这样的资料素材，但是没有一个系统化的教程 使你除了搜怎么搭建个人主页外，还要搜hexo使用教程 况且中间还可能遇到多种多样的坑 本篇文章，告诉你怎么使用github提供的空间，以及搭建自己的博客 本人亲身检测，绿色无公害； 一、环境准备 1.安装Git 下载地址：https://git-scm.com/downloads 2.安装Node.js 下载地址：https://nodejs.org/en/ 3.安装hexo 利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash） 1npm install -g hexo hexo安装中问题： npm ERR! registry error parsing json 错误 可能需要设置npm代理,执行命令 1npm config set registry http://registry.cnpmjs.org hexo:command not found 删除刚刚安装的npm目录，重新执行命令npm install -g hexo安装hexo， -g为全局安装 二、初始化hexo项目 1.创建hexo文件夹 安装完成后，在你喜爱的文件夹下（如H:\\hexo）， 执行以下指令(在H:\\hexo内点击鼠标右键，选择Git bash)， Hexo 即会自动在目标文件夹建立网站所需要的所有文件。 hexo init（初始化hexo项目） 2.安装依赖包 npm install（安装npm依赖包） 现在我们已经搭建起本地的hexo博客了 hexo命令行使用 常用命令： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546hexo help #查看帮助hexo init #初始化一个目录hexo new \"postName\" #新建文章hexo new page \"pageName\" #新建页面hexo generate #生成网页，可以在 public 目录查看整个网站的文件hexo server #本地预览，'Ctrl+C'关闭hexo deploy #部署.deploy目录hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**简写（常用）：hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy``` 3.本地预览执行一下命令：hexo generate 生成网页hexo server 本地预览到浏览器输入localhost:4000可以看到（系统再带的博客页面）。三、更换模板可能系统自带的模板不满足你的需求，没关系hexo提供了很多模板供你选择访问：https://hexo.io/themes/选择自己喜欢的模板吧！本人选择的模板是MiHo 主题地址 http://blog.minhow.com/2017/08/01/blog/installation-configuration/1、搭建自己喜欢的模板1.1 安装主题删除hexo自带的themes文件夹在hexo下clone MiHo 主题``` bash$ git clone https://github.com/WongMinHo/hexo-theme-miho.git themes/miho``` MiHo 主题需要Hexo 3.0或以上版本，请先升级。1.2 更新主题（提供技术支持）``` bashcd themes/miho git pull 1.3 依赖安装 生成站点文章静态数据，用于站内搜索。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586npm install hexo-generator-json-content --save``` 1.4 配置主题此处需要理解：与themes文件同级的_config.yml文件是hexo的项目配置文件（以下定义为‘主配置’）在themes/miho文件中的_config.yml文件是主题的配置文件（以下定义为‘主题配置’）注：可以在_config.yml中定义变量在模板中&lt;%- config.userurl %&gt;引入在主配置下找到theme属性将其定义为theme: miho即可主配置文件属性注释：``` bash# Hexo Configuration## Docs: http://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site #站点信息title: #标题subtitle: #副标题description: #站点描述，给搜索引擎看的author: #作者email: #电子邮箱language: zh-CN #语言# URL #链接格式url: #网址root: / #根目录permalink: :year/:month/:day/:title/ #文章的链接格式tag_dir: tags #标签目录archive_dir: archives #存档目录category_dir: categories #分类目录code_dir: downloads/codepermalink_defaults:# Directory #目录source_dir: source #源文件目录public_dir: public #生成的网页文件目录# Writing #写作new_post_name: :title.md #新文章标题default_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）titlecase: false #标题转换成大写external_link: true #在新选项卡中打开连接filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsehighlight: #语法高亮 enable: true #是否启用 line_number: true #显示行号 tab_replace:# Category &amp; Tag #分类和标签default_category: uncategorized #默认分类category_map:tag_map:# Archives2: 开启分页1: 禁用分页0: 全部禁用archive: 2category: 2tag: 2# Server #本地服务器port: 4000 #端口号server_ip: localhost #IP 地址logger: falselogger_format: dev# Date / Time format #日期时间格式date_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/time_format: H:mm:ss# Pagination #分页per_page: 10 #每页文章数，设置成 0 禁用分页pagination_dir: page# Disqus #Disqus评论，替换为多说disqus_shortname:# Extensions #拓展插件theme: landscape-plus #主题exclude_generator:plugins: #插件，例如生成 RSS 和站点地图的- hexo-generator-feed- hexo-generator-sitemap# Deployment #部署，将 lmintlcx 改成用户名deploy: type: git repo: github创库地址.git （需要使用ssh） branch: master 不要担心主题配置文件有中文注释，根据提示走就可以轻松搞定 注意：主配置文件中的 url ，root配置url: https://hjm100.github.io/Blogsroot: /Blogs 如果你想要通过https://hjm100.github.io去访问你的博客root: /因为我的https://hjm100.github.io用来装自己的主页，所以我的博客地址架构如上 虽然选择了自己想要的主题，但是主题中显示有关主体信息，以及博客信息，看着就不舒服 特别是网页底部版权那块，教你怎么改： 修改模板标签(用于一般模板不满足个人需求)步骤：用文本编辑器打开 Hexo 所在的目录打开 themes 目录打开你想要编辑的主题所在的目录中的 layout 目录打开 layout 目录下的 _partial 目录打开 _partial 目录下的 footer.ejs 文件修改底部链接post/copyright.ejs用于修改文章页脚用户链接 好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。 四、外网部署（为的就是省钱–哈哈）： github为我们提供了一个放置静态资源的空间，空间不大但是足以满足你博客以及个人主页的部署 如果有后台就不行了（不过可以选择自己租服务器，一个月就50多，不差钱的同鞋可以考虑一下） 以我的为例：github放置个人主页以及博客 1.申请账号，设置公钥这些老生常谈的话题就不用多说了（直接进入主题） 2.创建代码仓库2.1 点击加号穿件仓库New repository2.2仓库名字格式必须为: yourname.github.io （yourname为你的账号名）2.3进入新建的项目点击Settings设置项目找到GitHub Pages 点击change theme选择模板这时你的项目中就有了生成文件（但是这是系统创建的）2.4 不要删除_config.yml文件直接引入你的个人主页项目即可，默认打开index.html ok此时你的个人主页已经搭建好了 Blogs的搭建，你可以新建一个代码仓库（把这个代码仓库设置为html） 在设置中的GitHub Pages 选择Source 中的下拉框为master branch做法与上一样！ 3.仓库分析（yourname.github.io放个人主页，Blogs存放博客） 4.Blogs上传：将主配置中的deploy属性添加一下代码，deploy: type: git repo: 你github上的Blogs的SSH地址（注意ssh必须是系统最先生成的） branch: master 运行命令行 hexo g 编译文件 hexo d 提交文件即可 4.发布博文 在hexo\\source_posts文件夹下新建一个MD文件类型的文档 或者命令行 hexo new 博文创建12345678910---title: 博文 （博文标题）date: 2017-09-27 14:49:15 （博文时间）categories: hexo #文章文类tags: web开发技术 （ 文章标签）---这里正常写文章即可# 可以理解为h1(但是#后面一定要有空格)``` bash（代码要写在这里面）$ console.log('Hello hjm100') //这里写代码 ```注意：博文写好之后一定要先在本地查看后在提交！！！！！！ 五、域名的配置（将github提供的二级域名与自己购买的域名绑定）： 1.可以前往腾讯购买一个域名，一般cn域名一年就20多块钱 2.点击 Github 上项目的 Settings，GitHub Pages， 提示Your site is published at http://hjm100.cn (这是我买的域名) Custom domain下面的对话框填写你的域名即可 将独立域名与GitHub Pages的空间绑定 方法一：在站点source目录下面，新建一个名为CNAME的文本文件， 里面写入你要绑定的域名，比如hjm100.cn 方法二：在Repository的根目录下面，新建一个名为CNAME的文本文件， 里面写入你要绑定的域名，比如hjm100.cn 在github上面添加好自己的域名后，不要着急，此时你的域名还没有与博客完全绑定 打开cmd命令行，使用ping hjm100.github.io 查看到git对应的ip地址 前往你购买域名的平台进行ipv4域名解析，输入你ping到的域名即可， 域名解析后，去浏览器访问一下你的域名吧！就是这么神奇！！ 至此你的博客已经搭建完毕了，不要感谢我，本人博客预览hjm100.cn 域名https添加（让你的域名更加安全） 第一步首先注册一个属于自己的域名，可以选择cn域名，不贵一年就20多元我的域名是hjm100.cn 第二步域名https添加， 1.登录这个网站并注册：https://www.cloudflare.com/（直接使用邮箱注册） 2.注册完毕后登录，如果你之前没有用过，则系统会直接显示Add a website对话框，再次填写hjm100.cn(你的域名)点击scan DNS Records即可，系统会自动扫描你的域名（扫描需要等待一定时间） 3.扫描完毕后点击Continue(继续) 4.添加DNS Recordstypt:CNAME类型 name：www Value:","categories":[],"tags":[{"name":"web开发技术","slug":"web开发技术","permalink":"//hjm100.cn/Blogs/tags/web开发技术/"}]},{"title":"一台电脑多个公钥","slug":"一台电脑多个公钥","date":"2017-09-27T06:49:15.000Z","updated":"2017-09-29T07:42:54.914Z","comments":true,"path":"2017/09/27/一台电脑多个公钥/","link":"","permalink":"//hjm100.cn/Blogs/2017/09/27/一台电脑多个公钥/","excerpt":"","text":"windows同一台电脑设置多个公钥与不同github帐号交互 一、生成公钥 安装git，在桌面右键打开 “Git Bash” 键入命令：ssh-keygen -t rsa -C “hjm100@126.com” 提醒你输入key的名称，输入如id_rsa_hjm100;(key的名字为生成公钥或者私钥的文件名) 输入密码，与再次输入密码（这个密码用在你git push或git pull中使用） 在桌面下产生两个文件：id_rsa_hjm100和id_rsa_hjm100.pub 将桌面上的两个文件拷贝到C:\\Users\\admin.ssh里面（你也可以直接在这个.ssh文件夹中打开 “Git Bash”） 二、配置文件config 在C:\\Users\\admin.ssh\\目录下创建一个config文件（注意不带文件后缀） 复制一下代码到这个config文件中 （id_rsa指向公钥的名字–最上面的可以理解为一级公钥，比如博客的提交会调用原始的公钥） 1234567891011#personal accountHost github.comHostName github.comUser gitIdentityFile ~/.ssh/id_rsa#work accountHost github.com-workHostName github.comUser gitIdentityFile ~/.ssh/id_rsa_hjm 三、添加公钥到某个github账号 1.登录自己的账号到github.com的网站上 2.点击头像后点击生成下拉框中的Settings 3.在设置页面点击SSH and GPG keys进入公钥管理页面 4.点击New SSH key 在Title中填写名字（随意的标识） 5.用记事本打开id_rsa.pub文件，复制内容，粘贴到Key输入框中保存即可","categories":[],"tags":[{"name":"web开发技术","slug":"web开发技术","permalink":"//hjm100.cn/Blogs/tags/web开发技术/"}]},{"title":"如何做好项目总结","slug":"如何做好项目总结","date":"2017-08-09T10:21:47.000Z","updated":"2017-10-09T10:23:27.385Z","comments":true,"path":"2017/08/09/如何做好项目总结/","link":"","permalink":"//hjm100.cn/Blogs/2017/08/09/如何做好项目总结/","excerpt":"","text":"一、认识项目总结： 项目总结是一个阶段性的汇报，主要分为以下几部分 1、你的阶段性工作内容 2、项目中的问题 3、怎么解决问题 4、以及还有那些困惑 5、你的心得分享 注意：禁忌不可抱怨（公司最烦抱怨的员工） 二、做好总结前准备（特别是表达欠缺的员工） 总结前的准备，你可以以PPT，word文档以及记事本的方式来帮自己梳理要将的内容 一方面可以减少你的恐惧，另一方面帮助你思路清晰，最主要的是如果你将的不清晰 大家也知道你这段时间干的啥，以及你想要表单的是什么！ 总结准备内容格式随意，建议从上面的几点下手，一步一步不断完善。 三、项目总结流程 1、做好笔记，特别是别人的心得体会，以及老大的点评，有些是技术分享，有些是工作经验 可能对你接下来的工作，以及今后的发展有很大的帮助。 2、察言观色，认真听别人的汇报方式，取长补短，学习表达思路以及表达能力很重要 3、我的总结，在自己总结前，先要将自己的总结准备发到讨论组里，不要急于总结， 可以让大家预先了解一下你的总结内容，总结时语速放慢，给大家一个消耗的空间， 并且可以缓解自己的压力！ 四、总结整理 总结后一定要抽时间做一次总结反思，反思你的汇报效果，以及吸取到的知识技能， 因为可能随时记录的有点乱，过几天就忘记，没有起到总结的目的，通过总结整理， 让这些干活来补充你的知识欠缺。 注：人生之路是一个不断填坑的过程，重复性的错误不要犯第二次，不断完善自己的人生体系 不止是你的，技术能力，思路能力，表达能力一样重要！（表达能力是人与人之间沟通的桥梁） 附录：2017年9月1日阶段性项目总结 鸿基梦 时间：2017.8.31 一、工作内容 1、代理商后台 1)代理商后台“俱乐部”，“俱乐部名单”模块 2)代理商任务系统 3)代理商前端页面 2、游戏内嵌页 1)邀请有礼页面 2)个人物品以及兑换中心改版 二、心得体会 1.了解需求 |–拿到需求后，了解需求，该需求要解决的问题，想要达到什么效果 2.制定计划 |–对工作量和完成时间有个大体预估 3.敢于质疑 |–对产品提出方案的可实施性，是否合理要仔细思考 4.先理清表结构 |–工作第一步，先建表，后写代码 5.技术难点 |–事先做好技术考察，技术准备 6.按时完成工作 |–对自己工作负责 三、我与lua 1、项目问题： 1)在JS中运行lua？ 2)Lua.vm.js API不够用? 3)用lua可以创建dom元素？ …… 2.lua使用： local window = js.global -- window是JS中的global对象 window.alert(\"hello form lua!\") 大米：lua.vm.js可以实现弹出alert框，找一找看看还有什么API可以实现JS功能的。 网站资源找遍后，没有看到更多，放弃了！ 华哥：lua.vm.js可以实现弹出alert框，说明这个js确实可以实现用lua实现JS功能， 那它一定能创建DOM，只是我们 没有找到方法。要多试试，找到方法 3、启示： 在资源有限的情况下，我们要懂得从有限的信息中，寻找共性， 再结合自己已经掌握的知识，多动手，多尝试。别人说的“不可能 实现”,“肯定可以实现”,都不一定可信，一定 要自己动手。 思维不要受限 四、IOS统一链接 解决问题（在预发布环境中，邀请有礼二维码，IOS扫描后，直接启动 客户端） 注意 ： 1）IOS 9 以后支持通过超链接打开APP, “**”的统一链接现在 改为了 “**/openapp.html” 2）以后有打开app需求的页面，都可以通过该链接打开，如果页面没有特殊要求的话 五、总结完毕谢谢！","categories":[],"tags":[{"name":"工作习惯","slug":"工作习惯","permalink":"//hjm100.cn/Blogs/tags/工作习惯/"}]}]}